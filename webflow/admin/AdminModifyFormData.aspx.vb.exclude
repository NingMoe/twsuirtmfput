Imports System.IO
Imports NetReusables
Imports Cms.Platform
Imports Unionsoft.Workflow.Items
Imports Unionsoft.Workflow.Engine
Imports Unionsoft.Workflow.Platform

Public Class AdminModifyFormData
    Inherits RecordEditBase

#Region " Web 窗体设计器生成的代码 "

    '该调用是 Web 窗体设计器所必需的。
    <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()

    End Sub
    Protected WithEvents Panel1 As System.Web.UI.WebControls.Panel
    Protected WithEvents AttachmentList As System.Web.UI.WebControls.DataGrid
    Protected WithEvents btnUpload As System.Web.UI.WebControls.Button
    Protected WithEvents PanelAttachmentAdd As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelAttachment As System.Web.UI.WebControls.Panel
    Protected WithEvents UploadFile As System.Web.UI.HtmlControls.HtmlInputFile
    Protected WithEvents btnRollBack As System.Web.UI.WebControls.Button

    '注意: 以下占位符声明是 Web 窗体设计器所必需的。
    '不要删除或移动它。
    Private designerPlaceholderDeclaration As System.Object

    Private Sub Page_Init(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Init
        'CODEGEN: 此方法调用是 Web 窗体设计器所必需的
        '不要使用代码编辑器修改它。
        InitializeComponent()
    End Sub

#End Region

    Dim workflow As WorkflowInstance

    Private Sub Page_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        workflow = WorkflowFactory.LoadInstance(Request.QueryString("WorkflowID"))

        '--------------------------------------------------------------------------------------------------
        'banks add 2005-11-29
        'PageDealAfterPostback() '处理Postback之后的事务处理。
        '设置此页面使用的窗体

        Dim DefFormName As String = CTableForm.DEF_DESIGN_FORM
        Dim CmsRes As New CmsResource
        'Banks 2006-04-04 取消表内字典
        Dim forceRights As New ForceRightsInForm
        forceRights.ForceEnableRecView = True
        Dim datForm As DataInputForm = PageDealFirstRequest(CmsRes.ActiveCmsPassport, Panel1, 0, 0, workflow.ResourceID, workflow.RecordID, InputMode.ViewInHostTable, DefFormName, forceRights)   '处理Postback之后的事务处理。
        Session("PAGE_POPREL_DATAFORM" & workflow.ResourceID) = datForm
        '--------------------------------------------------------------------------------------------------
        '判断有没有附件表
        If CmsRes.HasAttachmentTable(workflow.ResourceID) <= 0 Then
            Me.PanelAttachment.Visible = False
        Else
            Me.PanelAttachment.Visible = True
            If Me.IsPostBack = False Then
                BindAttachmentTable(workflow.ResourceID, workflow.RecordID)
            End If
        End If

        Response.Write("<style>.UserForm1{width:730px;height:" & CStr(CmsRes.GetFormHeight(workflow.ResourceID, DefFormName)) & "px;border:1px solid #cccccc;overflow:auto;}</style>")
    End Sub

    '绑定到附件列表
    Private Sub BindAttachmentTable(ByVal ResourceID As Long, ByVal RecordID As Long)
        Dim CmsRes As New CmsResource
        If CmsRes.HasAttachmentTable(ResourceID) > 0 Then
            Dim AttachmentTable As DataTable = CmsRes.GetAttachments(ResourceID, RecordID)
            Me.AttachmentList.DataSource = AttachmentTable
            Me.AttachmentList.DataBind()
        End If
    End Sub

    '--------------------------------------------------------------------------
    '保存附件
    '--------------------------------------------------------------------------
    Private Sub btnUpload_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnUpload.Click
        If Me.UploadFile.PostedFile.FileName <> "" Then
            Dim CmsRes As New CmsResource(CurrentUser.Code, CurrentUser.Password)
            CmsRes.AddAttachment(workflow.ResourceID, workflow.RecordID, Me.UploadFile.PostedFile.FileName, Me.UploadFile.PostedFile.InputStream, "")
            CmsRes = Nothing
            BindAttachmentTable(workflow.ResourceID, workflow.RecordID)
        End If
    End Sub

    Private Sub AttachmentList_ItemDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.DataGridItemEventArgs) Handles AttachmentList.ItemDataBound
        If e.Item.ItemType = ListItemType.Item Or e.Item.ItemType = ListItemType.AlternatingItem Then
            Dim dr As DataRowView
            Dim btn As Button
            dr = CType(e.Item.DataItem, DataRowView)

            If Not e.Item.FindControl("btnDelete") Is Nothing Then
                '检查有无删除附件的权限
                btn = CType(e.Item.FindControl("btnDelete"), Button)
                btn.Attributes.Add("onClick", "return window.confirm('确实要删除吗?')")
            End If

            If Not e.Item.FindControl("btnOpen") Is Nothing Then
                '检查有无查看附件的权限
                btn = CType(e.Item.FindControl("btnOpen"), Button)
                btn.Attributes.Add("onClick", "OpenDocFileWindow(" & workflow.ResourceID & "," & DbField.GetLng(dr, "ID") & ",0);return false;")
            End If

            If Not e.Item.FindControl("btnCheckIn") Is Nothing Then
                btn = CType(e.Item.FindControl("btnCheckIn"), Button)
                btn.Attributes.Add("onClick", "return FileBrows(" & workflow.ResourceID & "," & DbField.GetLng(dr, "ID") & ")")
            End If

            If Not e.Item.FindControl("lnkDownloadFile") Is Nothing Then
                Dim lnk As LinkButton = CType(e.Item.FindControl("lnkDownloadFile"), LinkButton)
                lnk.Text = CStr(dr.Item("Name"))
                lnk.Attributes.Add("onClick", "window.open('DownloadFile.aspx?ResourceID=" & workflow.ResourceID & "&DocumentID=" & DbField.GetLng(dr, "ID") & "');return false;")
            End If

        End If
    End Sub

    Private Sub AttachmentList_ItemCommand(ByVal source As Object, ByVal e As System.Web.UI.WebControls.DataGridCommandEventArgs) Handles AttachmentList.ItemCommand
        '删除一个附件.
        If e.CommandName = "Delete" Then
            Dim lngDocID As Long = Convert.ToInt64(AttachmentList.DataKeys.Item(e.Item.ItemIndex))
            Dim CmsRes As New CmsResource
            CmsRes.DeleteAttachment(workflow.ResourceID, lngDocID)
            BindAttachmentTable(workflow.ResourceID, workflow.RecordID)
        End If
    End Sub

    Private Sub btnRollBack_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnRollBack.Click
        Response.Redirect("AdminFlowAdjust.aspx?WorkFlowID=" & workflow.Key)
    End Sub

End Class
