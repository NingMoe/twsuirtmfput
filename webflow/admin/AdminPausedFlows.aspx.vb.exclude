Imports NetReusables
Imports Unionsoft.Workflow.Items
Imports Unionsoft.Workflow.Engine
Imports Unionsoft.Workflow.Platform

Public Class AdminPausedFlows
    Inherits AdminPageBase

#Region " Web 窗体设计器生成的代码 "

    '该调用是 Web 窗体设计器所必需的。
    <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()

    End Sub
    Protected WithEvents chSelectAll As System.Web.UI.WebControls.CheckBox
    Protected WithEvents lnkSearch As System.Web.UI.WebControls.LinkButton
    Protected WithEvents Pager1 As Unionsoft.Workflow.Web.WorkflowPager
    Protected WithEvents lnkActive As System.Web.UI.WebControls.LinkButton
    Protected WithEvents PauseFlows As System.Web.UI.WebControls.DataGrid

    '注意: 以下占位符声明是 Web 窗体设计器所必需的。
    '不要删除或移动它。
    Private designerPlaceholderDeclaration As System.Object

    Private Sub Page_Init(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Init
        'CODEGEN: 此方法调用是 Web 窗体设计器所必需的
        '不要使用代码编辑器修改它。
        InitializeComponent()
    End Sub

#End Region

    Private Sub Page_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        '在此处放置初始化页的用户代码
        If Not Me.IsPostBack Then
            BindData()
        End If
    End Sub
    Private Sub BindData()
        Dim lngWorkflowID As Long = CLng(IIf(IsNumeric(Request.QueryString("WorkflowID")) = True, Request.QueryString("WorkflowID"), 0))
        Dim strWorkflowMainFieldValue As String = Request.QueryString("WorkflowMainFieldValue")
        Dim strCreateDate As String = Request.QueryString("CreateDate")
        Dim strCreateDate1 As String = Request.QueryString("CreateDate1")

        Dim strSql As String = "SELECT ID,FlOWNAME,CreateTime,MainFieldValue,CreatorName FROM WF_INSTANCE WHERE TaskStatus=" & WorkflowStatus.Paused
        If lngWorkflowID <> 0 Then
            strSql = strSql & " AND FLOWID=" & lngWorkflowID
        End If
        If strWorkflowMainFieldValue <> "" Then
            strSql = strSql & " AND MainFieldValue LIKE '%" & strWorkflowMainFieldValue & "%'"
        End If
        If IsDate(strCreateDate) Then
            strSql = strSql & " AND CreateTime >='" & strCreateDate & " 00:00:00'"
        End If
        If IsDate(strCreateDate1) Then
            strSql = strSql & " AND CreateTime <='" & strCreateDate1 & " 23:59:59'"
        End If
        strSql = strSql & " ORDER BY CreateTime DESC"

        Dim dt As DataTable = SDbStatement.Query(strSql).Tables(0)

        Me.PauseFlows.DataSource = dt
        Me.PauseFlows.DataBind()
        Pager1.CurrentPage = PauseFlows.CurrentPageIndex
        Pager1.PageCount = PauseFlows.PageCount
        Pager1.RecordCount = dt.Rows.Count
    End Sub

    Private Sub Pager1_Click(ByVal sender As Object, ByVal eventArgument As String) Handles Pager1.Click
        Select Case eventArgument
            Case "MoveFirstPage"
                PauseFlows.CurrentPageIndex = 0
            Case "MovePreviousPage"
                If PauseFlows.CurrentPageIndex > 0 Then PauseFlows.CurrentPageIndex = PauseFlows.CurrentPageIndex - 1
            Case "MoveNextPage"
                If PauseFlows.CurrentPageIndex < PauseFlows.PageCount - 1 Then PauseFlows.CurrentPageIndex = PauseFlows.CurrentPageIndex + 1
            Case "MoveLastPage"
                PauseFlows.CurrentPageIndex = PauseFlows.PageCount - 1
        End Select
        BindData()
    End Sub

    Private Sub ActiveFlows_ItemDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.DataGridItemEventArgs) Handles PauseFlows.ItemDataBound
        If e.Item.ItemType = ListItemType.AlternatingItem Or e.Item.ItemType = ListItemType.Item Or e.Item.ItemType = ListItemType.SelectedItem Then
            Dim chk As CheckBox = CType(e.Item.FindControl("chkItemID"), CheckBox)
            If Not chk Is Nothing Then
                chk.Attributes.Item("ItemID") = CStr(PauseFlows.DataKeys.Item(e.Item.ItemIndex))
            End If
        End If
    End Sub
    Private Sub chSelectAll_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chSelectAll.CheckedChanged
        Dim i As Integer
        For i = 0 To Me.PauseFlows.Items.Count - 1
            Dim chk As CheckBox = CType(Me.PauseFlows.Items(i).FindControl("chkItemID"), CheckBox)
            If Not chk Is Nothing Then
                chk.Checked = Me.chSelectAll.Checked
            End If
        Next

    End Sub
    Private Sub lnkActive_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles lnkActive.Click
        Dim i As Integer
        For i = 0 To Me.PauseFlows.Items.Count - 1
            Dim chk As CheckBox = CType(Me.PauseFlows.Items(i).FindControl("chkItemID"), CheckBox)
            If Not chk Is Nothing Then
                If chk.Checked = True Then
                    WorkflowManager.ActiveWorkflowInstance(chk.Attributes.Item("ItemID"))
                End If
            End If
        Next
        BindData()
        Me.chSelectAll.Checked = False
    End Sub

    Private Sub lnkSearch_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles lnkSearch.Click

    End Sub

    Private Sub ActiveFlows_ItemCommand(ByVal source As System.Object, ByVal e As System.Web.UI.WebControls.DataGridCommandEventArgs) Handles PauseFlows.ItemCommand
        Dim ID As Long = CLng(Me.PauseFlows.DataKeys(e.Item.ItemIndex))
        If e.CommandName = "Active" Then
            WorkflowManager.ActiveWorkflowInstance(ID.ToString())
            BindData()
        ElseIf e.CommandName = "ActiveRedirect" Then
            WorkflowManager.ActiveWorkflowInstance(ID.ToString())
            Session.Item("EntryUrl") = "AdminPausedFlows.aspx"
            Response.Redirect("RedirectEmployeeSelect.aspx?WorkflowId=" & ID)
        End If
    End Sub
End Class
